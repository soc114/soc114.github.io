---
title: "Models for causal inference"
---

Models are useful when we need subgroup summaries but we do not observe very many units in each subgroup. This situation is common in causal inference: we assume that $\vec{X}$ is a sufficient adjustment set so that conditional exchangeability holds, and this allows us to identify the causal quantity $\text{E}(Y^a\mid \vec{X} = \vec{x})$ by the statistical quantity $\text{E}(Y\mid A = a, \vec{X} = \vec{x})$. But that empirical quantity---the subgroup mean among those with treatment value $a$ and adjustment set value $\vec{x}$---may be the mean of a subgroup that is unpopulated. This is especially true in practice because the adjustment set $\vec{X}$ is often most plausible when it includes many variables, leading to a curse of dimensionality and small subgroup sample sizes. For this reason, causal inference approaches that adjust for measured variables often require us to estimate the means in many subgroups that are sparsely populated.

This page introduces outcome models for causal inference. To run the code on this page, you will need the tidyverse.

```{r, message = F, warning = F}
library(tidyverse)
```

## Motivating example

To what extent does completing a four-year college degree by age 25 increase the probability of having a spouse or residential partner with a four-year college degree at age 35, among the population of U.S. residents who were ages 12--16 at the end of 1996?

We used this example on the [Why Model?](why_model.qmd) page and will continue with it here. For those jumping in on this page, here is a refresher.

This causal question draws on questions in sociology and demography about assortative mating: the tendency of people with high education, income, or status to form households together^[For reviews, see [Mare 1991](https://doi.org/10.2307/2095670) and [Schwartz 2013](https://doi.org/10.1146/annurev-soc-071312-145544).]. One reason to care about assortative mating is that it can contribute to inequality across households: if people with high earnings potential form households together, then income inequality across households will be greater than it would be if people formed households randomly.

Our question is causal: to what extent is the probability of marrying a four-year college graduate higher if one were hypothetically to finish a four-year degree, versus if that same person were hypothetically to not finish a college degree? But in data that exist in the world, we see only one of these two potential outcomes. The people for whom we see the outcome under a college degree are systematically different from those for whom we see the outcome under no degree: college graduates come from families with higher incomes, higher wealth, and higher parental education, for example. All of these factors may directly shape the probability of marrying a college graduate even in the absence of college. Thus, it will be important to adjust for a set of measured confounders, represented by $\vec{X}$ in our DAG.

```{tikz, echo = F}
\begin{tikzpicture}[x = 1in, y = .4in]
\node (a) at (0,0) {$A$};
\node (y) at (1,0) {$Y$};
\node (l1) at (-1,2) {$X_1$};
\node (l2) at (-1,1.66) {$X_2$};
\node (l3) at (-1,1.33) {$X_3$};
\node (l4) at (-1,1) {$X_4$};
\node (l5) at (-1,.66) {$X_5$};
\node (l6) at (-1,.33) {$X_6$};
\node (l7) at (-1,0) {$X_7$};
\draw[->, thick] (l1) -- (a);
\draw[->, thick] (l2) -- (a);
\draw[->, thick] (l3) -- (a);
\draw[->, thick] (l4) -- (a);
\draw[->, thick] (l5) -- (a);
\draw[->, thick] (l6) -- (a);
\draw[->, thick] (l7) -- (a);
\draw[->, thick] (a) -- (y);
\draw[->, thick] (l1) to[bend left] (y);
\draw[->, thick] (l2) to[bend left] (y);
\draw[->, thick] (l3) to[bend left] (y);
\draw[->, thick] (l4) to[bend left] (y);
\draw[->, thick] (l5) to[bend left] (y);
\draw[->, thick] (l6) to[bend left] (y);
\draw[->, thick] (l7) to[bend left] (y);
\node[anchor = north, align = center, font = \footnotesize] at (a.south) {College\\Degree\\by Age 25};
\node[anchor = north, align = center, font = \footnotesize] at (y.south) {Spouse\\at Age 35\\Has Degree};
\node[anchor = east, align = center, font = \footnotesize] at (l1.west) {Sex};
\node[anchor = east, align = center, font = \footnotesize] at (l2.west) {Race};
\node[anchor = east, align = center, font = \footnotesize] at (l3.west) {Mom Education};
\node[anchor = east, align = center, font = \footnotesize] at (l4.west) {Dad Education};
\node[anchor = east, align = center, font = \footnotesize] at (l5.west) {Income};
\node[anchor = east, align = center, font = \footnotesize] at (l6.west) {Wealth};
\node[anchor = east, align = center, font = \footnotesize] at (l7.west) {Test Percentile};
\end{tikzpicture}
```

By adjusting for the variables $\vec{X}$, we block all non-causal paths between the treatment $A$ and the outcome $Y$ in the DAG. If this DAG is correct, then conditional exchangeability holds with this adjustment set: $\{Y^1,Y^0\}\indep A \mid\vec{X}$.

To estimate, we use data from the [National Longitudinal Survey of Youth 1997](https://www.bls.gov/nls/nlsy97.htm), a probability sample of U.S. resident children who were ages 12--16 on Dec 31, 1996. The study followed these children and interviewed them every year through 2011 and then every other year after that.

We will analyze a [simulated version](../data/nlsy97_simulated.RDS) of these data, which you can access with this line of code.

```{r, eval = F}
data <- readRDS("https://soc114.github.io/data/nlsy97_simulated.RDS")
```
```{r, echo = F}
data <- readRDS("../data/nlsy97_simulated.RDS")
```

::: {.callout-note collapse="true"}
## Expand to learn how to get the actual data

To access the actual data, you would need to [register](https://nlsinfo.org/investigator/pages/register) for an account, [log in](https://nlsinfo.org/investigator/pages/login), upload the [nlsy97.NLSY97](../code/nlsy97.NLSY97) tagset that identifies our variables, and then download. Unzip the folder and put the contents in a directory on your computer. Then run our code file [prepare_nlsy97.R](../code/prepare_nlsy97.R) in that folder. This will produce a new file `d.RDS`, contains the data. You could analyze that file. In the interest of transparency, we wrote the code [nlsy97_simulated.R](../data/nlsy97_simulated.R) to convert these real data to simulated data that we can share.
:::

The data contain several variables

* `a` is the treatment, containing the respondent's education (`no_college` or `college`).
* `y` is the outcome: `TRUE` if has a spouse or residential partner at age 35 who holds a college degree, and `FALSE` if no spouse or partner or if the spouse or partner at age 35 does not have a degree.
* There are several pre-treatment variables
     * `sex` is coded `Female` and `Male`
     * `race` is race/ethnicity and is coded `Hispanic`, `Non-Hispanic Black`, and `Non-Hispanic Non-Black`.
     * `mom_educ` is the respondent's mother's education as reported in 1997. It takes the value `No mom` if the child had no residential mother in 1997, and otherwise is coded with her education: `< HS`, `High school`, `Some college`, or `College`.
     * `dad_educ` is the respondent's father's education as reported in 1997. It takes the value `No dad` if the child had no residential father in 1997, and otherwise is coded with his education: `< HS`, `High school`, `Some college`, or `College`.
     * `log_parent_income` is the log of gross household income in 1997
     * `log_parent_wealth` is the log of household net worth in 1997
     * `test_percentile` is the respondent's percentile score on a test of math and verbal skills administered in 1999 (the Armed Services Vocational Aptitude Battery).
     
When values are missing, we have replcaed them with predicted values. In the simulated data, no row represents a real person because values have been drawn randomly from a probability distribution designed to mimic what exists in the real data. As discussed above, we did this in order to share the file with you by a download on this website.

## A three-step plan

Because the causal effect of `A` on `Y` is identified by adjusting for the confounders, we can estimate by outcome modeling. There are three general steps.

1) Model $E(Y\mid A, \vec{X})$, the conditional mean of $Y$ given the treatment and confounders
2) Predict potential outcomes
     * set `A = 1` for every unit. Predict $Y^1$
     * set `A = 0` for every unit. Predict $Y^0$
3) Aggregate to the average causal effect

## 1) Model factual outcomes

The code below uses Ordinary Least Squares to estimate an outcome model.

```{r}
model <- lm(
  y ~ a * (
    sex + race + mom_educ + dad_educ + log_parent_income +
      log_parent_wealth + test_percentile
  ),
  data = data
)
```

The `lm()` function estimates a linear model, which is stored in the `model` object. The first argument is the model formula, which defines the function by which we model the conditional mean of the outcome given the predictors. The second argument is the data we use to learn the model.

Why did we choose this model formula? You can actually choose any model formula, but there are some reasons we chose this one. In our model formula, we begin with the treatment `a` and then we interact this treatment with an additive function of all confounders `a * (...)`. This is equivalent to fitting two models: an additive OLS model for $Y^\text{college}$ and an additive OLS model for $Y^\text{no\_college}$, which is a desirable thing to do when we think the effect of college may differ for people with different values on the adjustment set. This type of model was proposed by [Lin (2013)](https://projecteuclid.org/journals/annals-of-applied-statistics/volume-7/issue-1/Agnostic-notes-on-regression-adjustments-to-experimental-data--Reexamining/10.1214/12-AOAS583.full) and is also known as a t-learner ([Kunzel et al. 2019](https://www.pnas.org/doi/abs/10.1073/pnas.1804597116)) because it is equivalent to estimating **t**wo separate regression models of outcome on confounder: one for the treated group and one for the untreated group. For a recent discussion of its advantages, see [Hazlett \& Shinkre (2024)](https://arxiv.org/pdf/2403.03299).

The model has a lot of terms! You can see them with `summary(model)`. Thankfully, we won't interpret any of them. We will just use the model as a tool to predict potential outcomes.

## 2) Predict potential outcomes

The code below predicts the conditional average potential outcome under treatment and control at the confounder values of each observation.

First, we create data with `a` set to the value `college` for everyone.

```{r}
data_1 <- data |>
  mutate(a = "college")
```
```{r, echo = F}
data_1 |> print(n = 3)
```

Then, we create data with `a` set to the value `no_college` for everyone.

```{r}
data_0 <- data |>
  mutate(a = "no_college")
```
```{r, echo = F}
data_0 |> print(n = 3)
```

We use our outcome model to predict the conditional mean of the potential outcome under each scenario.

```{r}
predicted <- data |>
  mutate(
    y1_predicted = predict(model, newdata = data_1),
    y0_predicted = predict(model, newdata = data_0),
    effect_predicted = y1_predicted - y0_predicted
  )
```
```{r, echo = F}
predicted |> 
  select(a,y,y1_predicted,y0_predicted) |>
  print(n = 3)
```

In the code above, the function call `predict(model, newdata = data_1)` uses the `model` object to make predictions for the data in `data_1`, which contains each person coded with the treatment set to `college`. The predicted values `y1_predicted` are predictions $\hat{Y}^\text{College}$ of the potential outcome under a four-year college degree. Likewise, the function call `predict(model, newdata = data_0)` predicts the outcomes under no college degree. The `effect_predicted` variable contains the predicted causal effect at the adjustment set values of each person in the data.

## 3) Aggregate

The final step is to aggregate to an average causal effect estimate.

```{r}
aggregated <- predicted |>
  select(y1_predicted, y0_predicted, effect_predicted) |>
  summarize_all(.funs = mean)
```
```{r, echo = F}
aggregated |> print()
```

We estimate that completing college increases the probability of having a college-educated by `r aggregated |> pull(effect_predicted) |> round(3)`, from `r aggregated |> pull(y0_predicted) |> round(3)` to `r aggregated |> pull(y1_predicted) |> round(3)`. This causal conclusion relies both on our causal assumptions (the DAG) and our statistical assumptions (the chosen model).

<!-- ## Treatment modeling -->

<!-- Because the causal effect of `A` on `Y` is identified by adjusting for the confounders `L1` and `L2`, we can also estimate by inverse probability of treatment weighting. The intuition of this approach is that treated units (with `A == TRUE`) are a random sample of all units, within subgroups defined by `L1` and `L2`. We can infer the population-average outcome under treatment by the weighted mean outcome under treatment, with weights equal to the inverse probability of being treated. -->

<!-- Treatment modeling proceeds in three steps: -->

<!-- 1) Model $P(A = 1\mid L_1, L_2)$, the conditional probability of treatment given confounders -->
<!-- 2) Predict the conditional probability $\pi$ of each unit's observed treatment -->
<!--      * if `A = 1`, predict $\pi = P(A = 1 \mid L_1,L_2)$ -->
<!--      * if `A = 0`, predict $\pi = P(A = 0 \mid L_1,L_2)$ -->
<!-- 3) Aggregate to the average causal effect -->
<!--      * estimate the expected outcome under treatment $E(Y^1)$ by a weighted mean of treated units' outcomes, weighted by $\frac{1}{\pi}$ -->
<!--      * estimate the expected outcome under control $E(Y^0)$ by a weighted mean of untreated units' outcomes, weighted by $\frac{1}{\pi}$ -->
<!--      * estimate the average causal effect by the difference -->

<!-- The code below assumes you have generated data as on the [data](data.qmd) page. -->

<!-- ```{r, echo = F, output = F, message = F, warning = F} -->
<!-- library(dplyr) -->
<!-- set.seed(90095) -->
<!-- n <- 500 -->
<!-- data <- tibble(L1 = rnorm(n), -->
<!--                L2 = rnorm(n)) |> -->
<!--   # Generate potential outcomes as functions of L -->
<!--   mutate(Y0 = rnorm(n(), mean = L1 + L2, sd = 1), -->
<!--          Y1 = rnorm(n(), mean = Y0 + 1, sd = 1)) |> -->
<!--   # Generate treatment as a function of L -->
<!--   mutate(propensity_score = plogis(-2 + L1 + L2)) |> -->
<!--   mutate(A = rbinom(n(), 1, propensity_score)) |> -->
<!--   # Generate factual outcome -->
<!--   mutate(Y = case_when(A == 0 ~ Y0, -->
<!--                        A == 1 ~ Y1)) -->
<!-- ``` -->

<!-- ## 1) Model -->

<!-- The code below uses logistic regression to model the conditional probability of treatment. -->

<!-- ```{r} -->
<!-- model <- glm( -->
<!--   A ~ L1 + L2,  -->
<!--   data = data,  -->
<!--   family = binomial -->
<!-- ) -->
<!-- ``` -->
<!-- ```{r, echo = F} -->
<!-- summary(model) -->
<!-- ``` -->

<!-- ## 2) Predict -->

<!-- The code below predicts the conditional probability of each unit's observed treatment value, also known as the propensity score. -->

<!-- ```{r} -->
<!-- predicted <- data |> -->
<!--   # Predict the probabilities that A = 1 and A = 0 -->
<!--   mutate( -->
<!--     p_A_equals_1 = predict(model, type = "response"), -->
<!--     p_A_equals_0 = 1 - p_A_equals_1 -->
<!--   ) |> -->
<!--   # Assign the propensity score based on the observed treatment -->
<!--   mutate( -->
<!--     pi = case_when( -->
<!--       A == 1 ~ p_A_equals_1, -->
<!--       A == 0 ~ p_A_equals_0 -->
<!--     ) -->
<!--   ) -->
<!-- ``` -->
<!-- ```{r, echo = F} -->
<!-- predicted |> print(n = 3) -->
<!-- ``` -->

<!-- ## 3) Aggregate -->

<!-- The final step is to aggregate to an average causal effect estimate. -->

<!-- ```{r} -->
<!-- aggregated_Y1 <- predicted |> -->
<!--   # Restrict to cases with A == 1 -->
<!--   filter(A == 1) |> -->
<!--   # Calculate the weighted mean outcome -->
<!--   summarize(estimate = weighted.mean(Y, w = 1 / pi)) -->

<!-- aggregated_Y0 <- predicted |> -->
<!--   # Restrict to cases with A == 1 -->
<!--   filter(A == 0) |> -->
<!--   # Calculate the weighted mean outcome -->
<!--   summarize(estimate = weighted.mean(Y, w = 1 / pi)) -->

<!-- average_effect_estimate <- aggregated_Y1 - aggregated_Y0 -->
<!-- ``` -->
<!-- ```{r, echo = F} -->
<!-- average_effect_estimate -->
<!-- ``` -->

<!-- ## Concluding thoughts -->

<!-- Outcome modeling is a powerful strategy because it bridges nonparametric causal identification to longstanding strategies where outcomes are modeled by parametric regression. -->

<!-- Inverse probability of treatment weighting is a powerful strategy because it bridges nonparametric causal identification to longstanding strategies from survey sampling where units from a population are sampled with known probabilities of inclusion. The analogy is that outcomes under treatment are sampled with estimated inclusion probabilities (the probability of treatment). Just as in a population sample we would need to think carefully about the probability of sampling, treatment modeling encourages us to model the probability of receiving the observed treatment. -->

