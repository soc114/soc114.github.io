{
  "hash": "3962641f5b67b30c313c1f7b1adf2d9f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Directed Acyclic Graphs\"\n---\n\n::: {.cell}\n\n:::\n\n\n\n\nDirected Acyclic Graphs (DAGs) formalize causal assumptions mathematically in graphs. One way DAGs are useful in observational studies is by helping us to identify a sufficient adjustment set ($\\vec{X}$) such that conditional exchangeability holds.\n\n## Nodes, edges, and paths\n\nThe previous page introduced a conditionally randomized experiment in which the researcher assigned participants to the treatment condition of (four-year college degree) vs (high school degree) with probabilities that depended on high school class rank. In this experiment, being in the top 25\\% of one's high school class caused a higher chance of receiving the treatment. We will also assume that both high school performance and college completion may causally shape employment at age 40.\n\nWe can formalize these ideas in a graph where each **node** (a letter) is a variable and each **edge** ($\\rightarrow$) is a causal relationship.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](DAGs_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nBetween each pair of nodes, you can enumerate every **path** or sequence of edges connecting the nodes.\n\n> **Path.** A path between nodes $A$ and $B$ is any set of edges that starts at $A$ and ends at $B$. Paths can involve arrows in either direction.\n\nIn our DAG above, there are two paths between $A$ and $Y$.\n\n1) $A\\rightarrow Y$\n2) $A\\leftarrow X \\rightarrow Y$\n\nWe use paths to determine the reasons why $A$ and $Y$ might be statistically dependent or independent.\n\n## Causal paths\n\nThe first type of path that we consider is a causal path.\n\n> **Causal path.** A path in which all arrows point in the same direction. For example, $A$ and $D$ could be connected by a causal path $A\\rightarrow B \\rightarrow C \\rightarrow D$.\n\nA causal path creates statistical depends between the nodes because the first node causes the last node, possibly through a sequence of other nodes.\n\nIn our example, there is a causal path $A\\rightarrow Y$: being assigned to a four-year college degree affects employment at age 40. Because of this causal path, people who are assigned to a four-year degree have different rates of employment at age 40 than those who are not.\n\nA causal path can go through several variables. For example, if we listed the paths between $X$ and $Y$ we would include the path $X\\rightarrow A \\rightarrow Y$. This is a causal path because being in the top 25\\% of one's high school class increases the probability of assignment to a four-year degree in our experiment, which in turn increases the probability of employment at age 40.\n\n## Fork structures\n\nTo reason about non-causal paths, we have to think about several structures that can exist along these paths. The first such structure is a fork structure.\n\n> **Fork structure.** A fork structure is a sequence of edges in which two variables ($A$ and $B$) are both caused a third variable ($C$): $A\\leftarrow C \\rightarrow B$.\n\nIn our example, the path $A\\leftarrow X \\rightarrow Y$ involves a fork structure. being in the top 25\\% of one's high school class causally affects both the treatment (college degree) and the outcome (employment at age 40).\n\nA fork structure creates statistical dependence between $A$ and $Y$ that does not correspond to a causal effect of $A$ on $Y$. In our example, people who are assigned to the treatment value (college degree) are more likely to have been in the top 25\\% of their high school class, since this high class rank affected treatment assignment in our experiment. A high class rank also affected employment at age 40. Thus, in our experiment the treatment would be associated with the outcome even if finishing college had no causal effect on employment.\n\nFork structures can be **blocked** by conditioning on the common cause. In our example, suppose we filter our data to only include those in the top 25\\% of their high school class. We sometimes use a box to denote conditioning on a variable, ($A\\leftarrow\\boxed{X}\\rightarrow Y$). Conditioning on $X$ blocks the path because within this subgroup $X$ does not vary, so it cannot cause the values of $A$ and $Y$ within the subgroup. In our example, if we looked among those in the top 25\\% of their high school classes the only reason college enrollment would be related to employment at age 40 would be the causal effect $A\\rightarrow Y$.\n\nTo emphasize ideas, it is also helpful to consider a fork structure in an example where the variables have no causal relationship.\n\nSuppose a beach records for each day the number of ice cream cones sold and the number of rescues by lifeguards. There is no causal effect between these two variables; eating ice cream does not cause more lifeguard rescues and vice versa. But the two are correlated because they share a common cause: warm temperatures cause high ice cream sales and also high lifeguard rescues. A fork structure formalizes this notion: $(\\text{ice cream sales}) \\leftarrow (\\text{warm temperature}) \\rightarrow (\\text{lifeguard rescues})$.\n\nIn the population of days as a whole, this fork structure means that ice cream sales are related to lifeguard rescues. But if we condition on having a warm temperature by filtering to days when the temperature took a particular value, ice cream sales would be unrelated to lifeguard rescues across those days. This is the sense in which conditioning on the common cause variable blocks the statistical associations that would otherwise arise from a fork structure.\n\n## Collider structures\n\nIn contrast to a fork structure where one variable affects two others ($\\bullet\\leftarrow\\bullet\\rightarrow\\bullet$), a **collider structure** is a structure where one variable is affected by two others.\n\n> **Collider structure.** A collider structure is a sequence of edges in which two variables ($A$ and $B$) both cause a third variable ($C$). We say that $C$ is a **collider** on the path $A\\rightarrow C \\leftarrow B$.\n\nFork and collider structures have very different properties, as we will illustrate through an example.\n\nSuppose that every day I observe whether the grass on my lawn is wet. I have sprinklers that turn on with a timer at the same time every day, regardless of the weather. It also sometimes rains. When the grass is wet, it is wet because either the sprinklers have been on or it has been raining.\n\n$$\n(\\text{sprinklers on}) \\rightarrow (\\text{grass wet}) \\leftarrow (\\text{raining})\n$$\n\nIf I look across all days, the variable (sprinklers on) is unrelated to the variable (raining). After all, the sprinklers are just on a timer! Formally, we say that even though (sprinklers on) and (raining) are connected by the path above, this path is **blocked** by the collider structure. A path does not create dependence between two variables when it contains a collider structure.\n\nIf I look only at the days when the grass is wet, a different pattern emerges. If the grass is wet and the sprinklers have not been on, then it must have been raining: the grass had to get wet somehow. If the grass is wet and it has not been raining, then the sprinklers must have been on. Once I look at days when the grass is wet (or **condition** on the grass being wet), the two input variables become statistically associated.\n\nA collider blocks a path when that collider is left unadjusted, but conditioning on the collider variable opens the path containing the collider.\n\n## Open and blocked paths\n\nA central purpose of a DAG is to connect causal assumptions to implications about associations that should be present (or absent) in data under those causal assumptions. To make this connection, we need a final concept of open and blocked paths.\n\n> A path is **blocked** if it contains an unconditioned collider or a conditioned non-collider. Otherwise, the path is **open**. An open path creates statistical dependence between its terminal nodes whereas a blocked path does not.\n\nAs examples for a path with no colliders,\n\n* $A\\leftarrow B \\rightarrow C \\rightarrow D$ is an open path because no variables are conditioned and it contains no colliders.\n* $A\\leftarrow \\boxed{B}\\rightarrow C \\rightarrow D$ is a blocked path because we have conditioned on the non-collider $B$.\n* $A\\leftarrow  B\\rightarrow \\boxed{C} \\rightarrow D$ is a blocked path because we have conditioned on the non-collider $C$.\n\n## Determining statistical dependence\n\nWe are now ready to use DAGs to determine if $A$ and $B$ are statistically dependent. The process involves three steps.\n\n1. List all paths between $A$ and $B$.\n2. Cross out any paths that are blocked.\n3. The causal assumptions imply that $A$ and $B$ may be statistically dependent only if any open paths remain.\n\nAs an example, below we consider a hypothetical DAG.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](DAGs_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n**1. Marginal dependence**\n\nMarginally without any adjustment, are $A$ and $D$ statistically dependent? We first write out all paths connecting $A$ and $D$.\n\n* $A\\rightarrow B \\leftarrow C\\rightarrow D$\n* $A\\leftarrow X\\rightarrow D$\n\nWe then cross out the paths that are blocked\n\n* $\\cancel{A\\rightarrow B \\leftarrow C\\rightarrow D}$ (blocked by unconditioned collider $B$)\n* $A\\leftarrow X\\rightarrow D$\n\nBecause an open path remains, $A$ and $D$ are statistically dependent.\n\n**2. Dependence conditional on $X$**\n\nIf we condition on $X$, are $A$ and $D$ statistically dependent? We first write out all paths connecting $A$ and $D$.\n\n* $A\\rightarrow B \\leftarrow C\\rightarrow D$\n* $A\\leftarrow \\boxed{X}\\rightarrow D$\n\nWe then cross out the paths that are blocked\n\n* $\\cancel{A\\rightarrow B \\leftarrow C\\rightarrow D}$ (blocked by unconditioned collider $B$)\n* $\\cancel{A\\leftarrow \\boxed{X}\\rightarrow D}$ (blocked by conditioned non-collider $X$)\n\nBecause no open path remains, $A$ and $D$ are statistically independent.\n\n**3. Dependence conditional on $\\{X,B\\}$**\n\nIf we condition on $X$ and $B$, are $A$ and $D$ statistically dependent? We first write out all paths connecting $A$ and $D$.\n\n* $A\\rightarrow B \\leftarrow C\\rightarrow D$\n* $A\\leftarrow \\boxed{X}\\rightarrow D$\n\nWe then cross out the paths that are blocked\n\n* $A\\rightarrow \\boxed{B} \\leftarrow C\\rightarrow D$ (open since collider $B$ is conditioned)\n* $\\cancel{A\\leftarrow \\boxed{X}\\rightarrow D}$ (blocked by conditioned non-collider $X$)\n\nBecause an open path remains, $A$ and $D$ are statistically dependent.\n\n## Causal identification with DAGs\n\nWhen our aim is to identify the average causal effect of $A$ on $Y$, we want to choose a set of variables for adjustment so that all remaining paths are causal paths. We call this a sufficient adjustment set.\n\n> A **sufficient adjustment set** for the causal effect of $A$ on $Y$ is a set of nodes that, when conditioned, block all non-causal paths between $A$ and $Y$.\n\nIn our example from the top of this page, there were two paths between $A$ and $Y$:\n\n* $(A\\text{: college degree})\\rightarrow (Y\\text{: employed at age 40})$\n* $(A\\text{: college degree})\\leftarrow (X\\text{: top 25\\% of high school class})\\rightarrow (Y\\text{: employed at age 40})$\n\nIn this example, $X$ is a sufficient adjustment set. Once we condition on $X$ by e.g. filtering to those in the top 25\\% of their high school class, the only remaining path between $A$ and $Y$ is the causal path $A\\rightarrow Y$. Thus, the difference in means in $Y$ across $A$ within subgroups defined by $X$ identifies the conditional average causal effect of $A$ on $Y$.\n\n**A more difficult example.**\n\nSufficient adjustment sets can be much more complicated. As an example, consider the DAG below.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](DAGs_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\nWe first list all paths between $A$ and $Y$.\n\n1) $A\\rightarrow Y$\n2) $A\\rightarrow M\\rightarrow Y$\n3) $A\\leftarrow X_1\\rightarrow X_3 \\rightarrow Y$\n4) $A\\leftarrow X_1\\rightarrow X_3 \\leftarrow X_2\\rightarrow Y$\n5) $A\\leftarrow X_3 \\rightarrow Y$\n6) $A\\leftarrow X_3\\leftarrow X_2 \\rightarrow Y$\n\nThe first two paths are causal, and the others are non-causal. We want to find a sufficient adjustment set to block all the non-causal paths.\n\nIn order to block paths (3), (5), and (6) we might condiiton on $X_3$. But doing so opens path (2), which was otherwise blocked by the collider $X_3$. In order to also block path (2), we might additionally condition on $X_1$. In this case, our sufficient adjustment set is $\\{X_1,X_3\\}$.\n\n1) $A\\rightarrow Y$\n2) $A\\rightarrow M\\rightarrow Y$\n3) $\\cancel{A\\leftarrow \\boxed{X_1}\\rightarrow \\boxed{X_3} \\rightarrow Y}$\n4) $\\cancel{A\\leftarrow \\boxed{X_1}\\rightarrow \\boxed{X_3} \\leftarrow X_2\\rightarrow Y}$\n5) $\\cancel{A\\leftarrow \\boxed{X_3} \\rightarrow Y}$\n6) $\\cancel{A\\leftarrow \\boxed{X_3}\\leftarrow X_2 \\rightarrow Y}$\n\nThen the only open paths are paths (1) and (2), both of which are causal paths from $A$ to $Y$.\n\nSometimes there are several sufficient adjustment sets. In this example, sufficient adjustment sets include:\n\n* $\\{X_1,X_3\\}$\n* $\\{X_2,X_3\\}$\n* $\\{X_1,X_2,X_3\\}$\n\nWe sometimes call the first two minimal sufficient adjustment sets because they are the smallest.\n\n> A **minimal sufficient adjustment set** is an adjustment set that achieves causal identification by conditioning on the fewest number of variables possible.\n\n## How to drawing a DAG\n\nSo far, we have focused on causal identification with a DAG that has been given. But how do you draw one for yourself?\n\nWhen drawing a DAG, there is an important rule: any node that would have edges pointing into any two nodes already represented in the DAG must be included. This is because what you omit from the DAG is far more important than what you include in the DAG. Many of your primary assumptions are about the nodes and edges that you leave out.\n\nFor example, suppose we are estimating the causal effect of a college degree on employment at age 40. After beginning our DAG with only these variables, we have to think about any other variables that might affect these two. High school performance is one example. Then we have to include any nodes that affect any two of \\{high school performance, college degree, employment at age 40\\}. Perhaps a person's parents' education affects that person's high school performance and college degree attainment. Then parents' education should be included as an additional node. The cycle continues, so that in observational causal inference settings you are likely to have a DAG with many nodes.\n\nIn practice, you may not have data on all the nodes that comprise the sufficient adjustment set in your graph. In this case, we recommend that you first draw a graph under which you can form a sufficient adjustment set with the measured variables. This allows you to state one set of causal beliefs under which your analysis can answer your causal question. Then, also draw a second DAG that includes the other variables you think are relevant. This will enable you to reason about the sense in which your results could be misleading because of omitting important variables.\n\n## Closing thoughts\n\nDAGs are a powerful tool for causal inference, because they are both visually intuitive and mathematically precise. They translate our theories about the world into a formal language with implications for causal identification.\n\nIf you'd like to learn more about DAGs, here are a few good resources:\n\n* Pearl, Judea, and Dana Mackenzie. 2018. [**The Book of Why: The New Science of Cause and Effect.**](https://www.hachettebookgroup.com/titles/judea-pearl/the-book-of-why/9781541698963) New York: Basic Books.\n* Pearl, Judea, Madelyn Glymour, and Nicholas P. Jewell. 2016. [**Causal Inference in Statistics: A Primer.**](https://bayes.cs.ucla.edu/PRIMER/) New York: Wiley.\n\n",
    "supporting": [
      "DAGs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}