{
  "hash": "5525724a780b034301a33e0d687a4034",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How to estimate in a conditionally randomized experiment\"\nsubtitle: \"More formally: Nonparametric estimation by subgroup means under conditional exchangeability\"\nauthor: \"Soc 114\"\nformat: beamer\nexecute:\n  echo: TRUE\nheader-includes:\n  \\def\\independenT#1#2{\\mathrel{\\rlap{$#1#2$}\\mkern2mu{#1#2}}}\n  \\newcommand\\indep{\\protect\\mathpalette{\\protect\\independenT}{\\perp}}\n---\n\n\n\n## Nonparametric estimation\n\n(a fancy words for model-free estimation, such as with `group_by` and `summarize()`)\n\n## Simulated setting: In math\n\n* Treatment `a` takes values `0` and `1`\n* Conditionally randomized within `x`, taking values `0`, `1` and `2`\n     * $\\text{P}(A = 1 \\mid X = 0) = .3$\n     * $\\text{P}(A = 1 \\mid X = 1) = .5$\n     * $\\text{P}(A = 1 \\mid X = 2) = .8$\n* Outcome $Y$ is numeric\n\n## Simulated setting: In data\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,000 x 5\n     id     x     a      y sampling_weight\n  <int> <int> <int>  <dbl>           <dbl>\n1     1     2     1  1.87                1\n2     2     1     1  0.337               1\n3     3     0     0  0.723               1\n4     4     0     1 -0.458               1\n5     5     0     0 -1.10                1\n# i 995 more rows\n```\n\n\n:::\n:::\n\n\n\n## 1) Estimate within subgroups\n\nEstimate each mean potential outcome in each subgroup $\\text{E}(Y^a\\mid X = x)$ by the subgroup sample weighted mean among those with $X = x$ and $A = a$.\n\n$$\n\\begin{aligned}\n\\hat{\\text{E}}\\left(Y^a\\mid X = x\\right) &= \\hat{\\text{E}}(Y\\mid X = x, A = a) \\\\\n&= \\frac{\\sum_{i:X_i=x,A_i=a}w_iY_i}{\\sum_{i:X_i=x,A_i=a}w_i}\n\\end{aligned}\n$$\n\n## 1) Estimate within subgroups\n\n\\footnotesize\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverage_potential_outcomes <- simulated |>\n  group_by(x,a) |>\n  summarize(mean_y = weighted.mean(y, w = sampling_weight))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 x 3\n# Groups:   x [3]\n      x     a  mean_y\n  <int> <int>   <dbl>\n1     0     0  0.0580\n2     0     1 -0.203 \n3     1     0 -0.111 \n4     1     1  0.961 \n5     2     0  0.0493\n6     2     1  2.03  \n```\n\n\n:::\n:::\n\n\n\n## 2) Pivot across treatment $A$ to take differences\n\n\\footnotesize\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncate <- average_potential_outcomes |>\n  # Pivot wider and difference over A to estimate CATE\n  pivot_wider(\n    names_from = a, \n    names_prefix = \"mean_y\", \n    values_from = \"mean_y\"\n  ) |>\n  mutate(cate = mean_y1 - mean_y0) |>\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 x 4\n# Groups:   x [3]\n      x mean_y0 mean_y1   cate\n  <int>   <dbl>   <dbl>  <dbl>\n1     0  0.0580  -0.203 -0.261\n2     1 -0.111    0.961  1.07 \n3     2  0.0493   2.03   1.99 \n```\n\n\n:::\n:::\n\n\n\n## 3) Re-aggregate to the Average Treatment Effect\n\nThe average treatment effect (ATE) is the weighted average of the conditional average treatment effects (CATEs), weighted by size.\n\n$$\n\\underbrace{\\hat{\\text{E}}\\left(Y^1-Y^0\\right)}_{\\substack{\\text{estimated overall}\\\\\\text{average effect}}} = \\underbrace{\\sum_x}_{\\substack{\\text{sum over}\\\\\\text{subgroups}}} \\underbrace{\\hat{\\text{P}}(X = x)}_{\\text{size of subgroup}}\\underbrace{\\hat{\\text{E}}\\left(Y^1 - Y^0\\mid X = x\\right)}_{\\substack{\\text{average effect}\\\\\\text{within subgroup}}}\n$$\n\n## 3) Re-aggregate to the Average Treatment Effect\n\nFirst, determine the size of the subgroups:\n\n\\footnotesize\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstratum_sizes <- simulated |>\n  # Count sum of sampling weight in each stratum\n  count(x, wt = sampling_weight) |>\n  # Convert count to a proportion of the population\n  mutate(stratum_size = n / sum(n)) |>\n  select(-n)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 x 2\n      x stratum_size\n  <int>        <dbl>\n1     0        0.263\n2     1        0.472\n3     2        0.265\n```\n\n\n:::\n:::\n\n\n\n## 3) Re-aggregate to the Average Treatment Effect\n\nThen, re-aggregate across subgroups:\n\n\\footnotesize\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncate_with_stratum_size <- cate |>\n  left_join(stratum_sizes, by = join_by(x)) |>\n  ungroup()\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 x 5\n      x mean_y0 mean_y1   cate stratum_size\n  <int>   <dbl>   <dbl>  <dbl>        <dbl>\n1     0  0.0580  -0.203 -0.261        0.263\n2     1 -0.111    0.961  1.07         0.472\n3     2  0.0493   2.03   1.99         0.265\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nate <- cate_with_stratum_size |>\n  summarize(ate = weighted.mean(cate, w = stratum_size))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 1\n    ate\n  <dbl>\n1 0.963\n```\n\n\n:::\n:::\n\n\n\n## Takeaways\n\n* In a **conditionally randomized experiment**, units are randomly assigned to treatment within subgroups of $X$.\n* We get **conditional exchangeability**:\n$$\n\\underbrace{\\{Y^1,Y^0\\}}_{\\substack{\\text{Potential}\\\\\\text{Outcomes}}} \\underbrace{\\indep}_{\\substack{\\text{Are}\\\\\\text{Independent of}}} \\underbrace{A}_\\text{Treatment} \\underbrace{\\mid}_{\\substack{\\text{Within}\\\\\\text{Subgroups}}} \\underbrace{X}_\\text{of X}\n$$\n* Under conditional exchangeability, causal effects within subgroups can be estimated by a difference in means\n\n## Bonus: Estimation by treatment weighting\n\nTreatment weighting is an approach that begins from a different angle but ends up at a mathematically equivalent estimator.\n\nFor each unit, we obseve $Y^{A_i}$ with some probability\n$$\\text{P}(A = A_i \\mid X = x_i)$$\nWe can estimate by the proportion within each subgroup to receive treatment $A = A_i$.\n\n* For units with $A_i = 1$, this is the subgroup mean of $A = 1$\n* For units with $A_i = 0$, this is the subgroup mean of $A = 0$\n\n## Bonus: Estimation by treatment weighting\n\n\\footnotesize\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_with_probabilities <- simulated |>\n  group_by(x) |>\n  mutate(probability_of_a = case_when(\n    # For treated units, proportion treated\n    a == 1 ~ mean(a),\n    # For untreated units, proportion untreated\n    a == 0 ~ mean(1 - a)\n  )) |>\n  ungroup() |>\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,000 x 6\n      id     x     a      y sampling_weight probability_of_a\n   <int> <int> <int>  <dbl>           <dbl>            <dbl>\n 1     1     2     1  1.87                1            0.762\n 2     2     1     1  0.337               1            0.502\n 3     3     0     0  0.723               1            0.684\n 4     4     0     1 -0.458               1            0.316\n 5     5     0     0 -1.10                1            0.684\n 6     6     1     0  1.11                1            0.498\n 7     7     1     1 -0.799               1            0.502\n 8     8     1     0  0.841               1            0.498\n 9     9     2     1  2.63                1            0.762\n10    10     0     1 -0.776               1            0.316\n# i 990 more rows\n```\n\n\n:::\n:::\n\n\n\n## Bonus: Estimation by treatment weighting\n\nSampling weights are 1 divided by the probability of inclusion in the sample. Likewise, treatment weights are 1 divided by the probability of receiving a particular treatment.\n\n\\footnotesize\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_with_weights <- data_with_probabilities |>\n  mutate(\n    total_weight = sampling_weight * (1 / probability_of_a)\n  ) |>\n  print(n = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,000 x 7\n     id     x     a     y sampling_weight probability_of_a total_weight\n  <int> <int> <int> <dbl>           <dbl>            <dbl>        <dbl>\n1     1     2     1 1.87                1            0.762         1.31\n2     2     1     1 0.337               1            0.502         1.99\n3     3     0     0 0.723               1            0.684         1.46\n# i 997 more rows\n```\n\n\n:::\n:::\n\n\n\n## Bonus: Estimation by treatment weighting\n\nOnce we have inverse probability of treatment weights, we can estimate by the sample weighted mean in each treatment group.\n\n\\footnotesize\n\n\n::: {.cell}\n\n```{.r .cell-code}\nate <- data_with_weights |>\n  group_by(a) |>\n  summarize(estimate = weighted.mean(y, w = total_weight)) |>\n  pivot_wider(\n    names_from = a, \n    names_prefix = \"mean_y\", \n    values_from = estimate\n  ) |>\n  mutate(ate = mean_y1 - mean_y0) |>\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 3\n  mean_y0 mean_y1   ate\n    <dbl>   <dbl> <dbl>\n1 -0.0241   0.939 0.963\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}